'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
def cache(f):
  cache = {}
  def wrapper(n):
    if n in cache:
      return cache[n]
    result = f(n)
    cache[n] = result
    return result
  return wrapper

@cache
def fib(n):
  return fib(n - 1) + fib(n - 2) if n > 1 else n

sum = 0
n = 1
while True:
  val = fib(n)
  if val > 4000000:
    break
  if val % 2 is 0:
    sum += val
  n += 1

print(sum)